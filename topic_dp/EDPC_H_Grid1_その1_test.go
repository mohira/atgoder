package topic_dp

import (
	"testing"
)

// [EDPC H - Grid1](https://atcoder.jp/contests/dp/tasks/dp_h)
func AnswerEDPC問題Hその1(H, W int, A []string) int {
	dp := make([][]int, H)
	for i := 0; i < len(dp); i++ {
		dp[i] = make([]int, W)
	}

	// 初期化: ゴール地点から、ゴールする経路は1通り
	dp[H-1][W-1] = 1

	for i := H - 1; i >= 0; i-- {
		for j := W - 1; j >= 0; j-- {
			if i+1 <= H-1 {
				dp[i][j] += dp[i+1][j]
			}
			if j+1 <= W-1 {
				dp[i][j] += dp[i][j+1]
			}

			dp[i][j] %= MOD

			if A[i][j] == '#' {
				dp[i][j] = 0
			}
		}
	}

	// 答えはスタート地点でおk
	return dp[0][0]
}

func TestAnswerEDPC問題Hその1(t *testing.T) {
	tests := []struct {
		name string
		H, W int
		A    []string
		want int
	}{
		{
			"入力例1",
			3, 4,
			[]string{
				"...#",
				".#..",
				"....",
			},
			3,
		},
		{
			"入力例2",
			5, 2,
			[]string{
				"..",
				"#.",
				"..",
				".#",
				"..",
			},
			0,
		},
		{
			"入力例3",
			5, 5,
			[]string{
				"..#..",
				".....",
				"#...#",
				".....",
				"..#..",
			},
			24,
		},

		{
			"入力例4",
			20, 20,
			[]string{
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
				"....................",
			},
			345263555,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := AnswerEDPC問題Hその1(tt.H, tt.W, tt.A); got != tt.want {
				t.Errorf("got %v, want %v", got, tt.want)
			}
		})
	}
}
