package ABC_problemC_gray

import (
	"testing"
)

// [ABC195C - Comma](https://atcoder.jp/contests/abc195/tasks/abc195_c)
func AnswerABC195Cその2(N int) int {
	// 方針その2: 逆から見る発想(https://youtu.be/k2fzO_U7RnA?t=1817)
	// 「ある整数にいくつのカンマが打たれるか？」ではなく「N個目のカンマが打たれる個数」を考える
	//
	//   i) 1個目のカンマが打たれるのは、999より大きい整数
	// 		つまり、「N-999」の数だけ、"1"個目のカンマがある
	//  ii) 2個目のカンマが打たれるのは、999,999より大きい整数
	// 		つまり、「N-999,999」の数だけ、"2"個目のカンマがある
	// iii) 3個目のカンマが打たれるのは、999,999,999より大きい整数
	// 		つまり、「N-999,999,999」の数だけ、"2"個目のカンマがある
	var ans int

	if N >= 1_000 {
		ans += N - 999
	}
	if N >= 1_000_000 {
		ans += N - 999_999
	}
	if N >= 1_000_000_000 {
		ans += N - 999_999_999
	}

	if N >= 1_000_000_000_000 {
		ans += N - 999_999_999_999
	}
	if N >= 1_000_000_000_000_000 {
		ans += N - 999_999_999_999_999
	}

	//// Maxで書き換えるスッキリかけるけど、ちょっとわかりにくくなるかも
	//ans += lib.Max(0, N - 999)
	//ans += lib.Max(0, N - 999_999)
	//ans += lib.Max(0, N - 999_999_999)
	//ans += lib.Max(0, N - 999_999_999_999)
	//ans += lib.Max(0, N - 999_999_999_999_999)

	return ans
}

func TestAnswerABC195Cその2(t *testing.T) {
	tests := []struct {
		name string
		N    int
		want int
	}{
		{"入力例1", 1_010, 0 + 11},
		{"入力例2", 27182818284590, 107730272137364},

		{"", 10_001, 9000 + 2},
		{"", 100_000, 9000 + 90000 + 1*1},
		{"", 100_001, 9000 + 90000 + 1*2},
		{"", 999_999, 9000 + 90000 + 900000},
		{"", 1_000_000, 9000 + 90000 + 900000 + 2*1},
		{"", 10_000_000, 9000 + 90000 + 900000 + 2*9000000 + 2*1},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := AnswerABC195Cその2(tt.N)

			if got != tt.want {
				t.Errorf("got %v want %v", got, tt.want)
			}
		})
	}
}
